name: cargo-generate

on:
  push:
    branches: ["*"]
    tags: [v0.*]
  pull_request:
  merge_group:

env:
  #
  # Dependency versioning
  #

  # This is the MSRV used by `wgpu` itself and all surrounding infrastructure.
  REPO_MSRV: "1.83"
  RUSTFLAGS: -D warnings

jobs:
  cargo-generate:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "01-hello-compute"
            path: "examples/standalone/01_hello_compute"

    name: "${{ matrix.name }}"

    steps:
      - uses: actions/checkout@v2

      - name: Install Repo MSRV toolchain
        run: |
          rustup toolchain install ${{ env.REPO_MSRV }} --no-self-update --profile=minimal
          rustup override set ${{ env.REPO_MSRV }}
          cargo -V

      - name: disable debug symbols
        shell: bash
        run: |
          mkdir -p .cargo

          cat <<EOF >> .cargo/config.toml
            [profile.dev]
            debug = false
          EOF

      - name: caching
        uses: Swatinem/rust-cache@v2
        with:
          key: cargo-generate-${{ matrix.name }}

      - name: "Install cargo-generate"
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-generate

      - name: "Run cargo-generate"
        run: |
          cd ..
          cargo generate --path wgpu --name ${{ matrix.name }} ${{ matrix.path }}

      - name: "Check generated files"
        run: |
          cd ../${{ matrix.name }}/
          cat <<EOF >> Cargo.toml
            [patch.crates-io]
            wgpu = { path = "../wgpu/wgpu" }
          EOF
          cargo check
